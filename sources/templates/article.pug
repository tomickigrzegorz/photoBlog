block variables
- var path = self.htmlWebpackPlugin.options.DATA

doctype html
html(lang="pl" dir="ltr" itemscope itemtype="http://schema.org/WebPage")

  include ./includes/head.pug
  include ./includes/header.pug
  include ./includes/svgLogos.pug
  include ./includes/image.pug

  head
    +head(path, 'article')

  body
    script. 
      try { 
        document.body.dataset.theme = localStorage.getItem('theme')
      } catch (e) {
        document.body.dataset.theme = null
      }
    .flex-wrap.container.article
      +svgLogos()
      +header('article')

      div(id="progress" class="bar")
      main(class="container")
        article(class="article")
          header(class="article__title")
            h1= path.body.title
            .article__date
              svg(class="icon" viewBox="0 0 24 24")
                g(fill="none" )
                  g(class="clock" fill-rule="nonzero")
                    path(d="M20.473 11.473a.527.527 0 00-.528.527c0 4.381-3.564 7.945-7.945 7.945S4.055 16.381 4.055 12 7.619 4.055 12 4.055c1.336 0 2.635.331 3.795.963l-.659.66a.527.527 0 00.373.9h2.523a.527.527 0 00.528-.527V3.527a.528.528 0 00-.901-.372l-1.09 1.09A8.96 8.96 0 0012 3a8.94 8.94 0 00-6.364 2.636C3.936 7.336 3 9.596 3 12s.936 4.664 2.636 6.364C7.336 20.064 9.596 21 12 21s4.664-.936 6.364-2.636A8.94 8.94 0 0021 12a.527.527 0 00-.527-.527z")
                    path(d="M15.701 11.35h-3.05V8.298a.563.563 0 00-1.125 0v3.613c0 .31.252.562.562.562h3.613a.562.562 0 000-1.125z")
                  path(d="M0 0h24v24H0z")
              small.reading-time
              small= path.body.date
            #share-button-stick.share-button-temp
          //- .article__text!= path.file.body.text.replace(/\n?\r\n/g, '<br />' )
          .article__text!= path.body.text.replace(/<a\s+href=/gi, '<a rel="noopener" target="_blank" class="sweep-to-top" href=')
          .article__content
            each val, i in path.body.items
              figure
                +image(val.path, val.img, "responsively-lazy", val.alt)
                if val.text
                  figcaption!= val.text

            .maps-title!= path.mapstitle


          #share-button-bottom.share-button-temp
          .disqus-contet.row
            #disqus_thread
            noscript Please enable JavaScript to view the 
              a(href="https://disqus.com/?ref_noscript" rel="nofollow") | comments powered by Disqus.

      script(type='application/ld+json').
        {
          "@context": "http://schema.org/",
          "@type": "Blog",
          "publisher": "grzegorztomicki.pl",
          "author": "#{path.schema.author}",
          "datePublished": "#{path.schema.datePublished}",
          "dateModified": "#{path.schema.dateModified}",
          "headline": "Blog fotograficzny"
        }
      script.
        document.addEventListener('DOMContentLoaded', function() {
          new Zooom('zooom', {
            zIndex: 9,
            animationTime: 300,
            cursor: {
              in: 'var(--zoom-in)',
              out: 'var(--zoom-out)',
            },
            overlay: {
              color: '#f5f5f5',
              opacity: 100,
            },
            onResize: function () {
              // we set the page width from which it will
              // be possible to click on the image
              let responsiveMin = 800;

              // we check the width of the browser window
              const windowWidth =
                window.innerWidth ||
                document.documentElement.clientWidth ||
                document.body.clientWidth;

              // we return the boolean value 'true/false'
              // the value 'true' blocks clicking the image
              const widthWindow = windowWidth < responsiveMin ? true : false;

              const root = document.documentElement;
              root.style.setProperty('--zoom-in', widthWindow ? 'default' : 'zoom-in');
              root.style.setProperty('--zoom-out', widthWindow ? 'default' : 'zoom-out');

              return widthWindow;
            },
          });

          new ReadingTime({
            wordsPerMinute: 215,
            photosPerMinute: 12,

            elements: ['article'],

            onResult: function (index, minutes, words, images) {
              const element = document.querySelector('.reading-time');
              const text = minutes > 1 ? 'minut czytania' : 'minuta czytania';
              element.textContent = `${Math.ceil(minutes)} ${text}`;
              //- element.textContent = `~${Math.ceil(minutes)} ${text} (słów: ${words}, zdjęć: ${images})`;
            },
          });
        });

      include ./includes/footer.pug
      include ./includes/backToTop.pug